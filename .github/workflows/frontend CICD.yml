name: Frontend CI

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.20.2]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
    
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
    
      - name: Install Node.js dependencies
        run: npm ci
    
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} &&
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} &&
          aws configure set region ${{ secrets.AWS_REGION }}
    
      - name: Add execute permission to the script
        run: chmod +x uploadDataToDynamoDB.sh
    
      - name: Run custom script
        run: sh uploadDataToDynamoDB.sh
    
      - name: Get API Gateway endpoint
        run: |
          API_ID=$(aws cloudformation describe-stacks --stack-name beatoncloud-stack --query "Stacks[0].Outputs[?OutputKey=='APIEndpoint'].OutputValue" --output text)
          echo "{\"ApiUrl\": \"$API_ID\"}" > src/config.json
    
      - name: Build project
        run: npm run build
        env: 
          CI: ""

  merge_to_main:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Set user information
        run: |
          git config user.email "woogieonxon@gmail.com"
          git config user.name "woogieonxon"
    
      - name: Create and switch to main branch
        run: |
          git checkout -b main
          git add .
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit"
          else
            git commit -m "Initial commit for main branch"
            git push origin main
          fi
    
      - name: Get S3 Bucket URL
        run: |
          aws configure list  # debugging
          aws sts get-caller-identity  # debugging
          aws cloudformation describe-stacks --stack-name beatoncloud-stack  # debugging
          S3_BUCKET_URL=$(aws cloudformation describe-stacks --stack-name beatoncloud-stack --query "Stacks[0].Outputs[?OutputKey=='DeploytoCloudFront'].OutputValue" --output text)
          echo "$S3_BUCKET_URL" > s3sync.sh
          sed -i 's|environment/personalizeworkshop|work/BeatOnCloud-Personalize/BeatOnCloud-Personalize|g' s3sync.sh

      - name: Deploy to S3
        run: sh s3sync.sh
